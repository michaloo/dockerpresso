#!/usr/bin/env sh
set -e

VERSION="2.0.0"
DOCKERPRESSO_FILE="Dockerpressofile"
MAIN_DC_FILE="docker-compose.yml"
ADMIN_DC_FILE="docker-compose.admin.yml"
ALL_DC_FILES="-f $MAIN_DC_FILE -f $ADMIN_DC_FILE"


assert_initialized() {
  if [ ! -f $MAIN_DC_FILE ] || [ ! -f $ADMIN_DC_FILE ] || [ ! -f $DOCKERPRESSO_FILE ] ; then
    echo "It looks like dockerpresso is not installed correctly, run 'docker run --rm -v `pwd`:/project michaloo/dockerpresso'" >&2
    exit 2
  fi
}

case "$1" in
  --debug) # Argument acting as a simple flag
    set -x
    shift 1
    ;;
esac

case "$1" in
  up)
    assert_initialized
    docker-compose up -d --force-recreate
    docker-compose $ALL_DC_FILES run --rm --no-deps web-cli < Dockerpressofile
    ;;
  stop)
    assert_initialized
    docker-compose stop
    ;;
  rm)
    assert_initialized
    docker-compose $ALL_DC_FILES rm --all
    ;;
  ps)
    assert_initialized
    docker-compose $ALL_DC_FILES ps
    ;;
  logs)
    assert_initialized
    docker-compose $ALL_DC_FILES logs
    ;;
  down)
    assert_initialized
    docker-compose $ALL_DC_FILES down
    ;;
  destroy)
    assert_initialized
    docker-compose $ALL_DC_FILES run --rm --no-deps web-cli rm -rf ./
    docker-compose $ALL_DC_FILES down -v
    ;;
  mysql)
    assert_initialized
    docker-compose $ALL_DC_FILES run --rm mysql-cli
    ;;
  version)
    echo $VERSION
    ;;
  wp-version)
    assert_initialized
    docker-compose $ALL_DC_FILES run --rm --entrypoint wp web-cli core version
    ;;
  init)
    if [ "$2" != "--skip-download" ] ; then
      docker-compose $ALL_DC_FILES run --rm --no-deps web-cli wp core download
    fi
    docker-compose $ALL_DC_FILES run --rm --no-deps web-cli wp config create --dbname="" --dbuser="" --skip-check --extra-php <<PHP
define( 'WP_DEBUG', filter_var(getenv("WP_DEBUG"), FILTER_VALIDATE_BOOLEAN) );
define( 'WP_DEBUG_LOG', filter_var(getenv("WP_DEBUG_LOG"), FILTER_VALIDATE_BOOLEAN) );
define( 'WP_CACHE' , filter_var(getenv("WP_CACHE"), FILTER_VALIDATE_BOOLEAN) );
define( 'WPCACHEHOME', getenv("WPCACHEHOME") );
define( 'UPLOADS', getenv("UPLOADS") );

define('FS_METHOD', getenv("FS_METHOD") );
define('DISABLE_WP_CRON', filter_var(getenv("DISABLE_WP_CRON"), FILTER_VALIDATE_BOOLEAN));
define('DISALLOW_FILE_EDIT', filter_var(getenv("DISALLOW_FILE_EDIT"), FILTER_VALIDATE_BOOLEAN));
PHP

    docker-compose $ALL_DC_FILES run --rm --no-deps web-cli sed -i \
      -e "s/define( 'DB_NAME',.*/define( 'DB_NAME', getenv('MYSQL_DATABASE') );/" \
      -e "s/define( 'DB_USER',.*/define( 'DB_USER', getenv('MYSQL_USER') );/" \
      -e "s/define( 'DB_PASSWORD',.*/define('DB_PASSWORD', getenv('MYSQL_PASSWORD') );/" \
      -e "s/define( 'DB_HOST',.*/define( 'DB_HOST', getenv('DB_HOST') );/" \
      -e "s/define( 'DB_CHARSET',.*/define( 'DB_CHARSET', getenv('DB_CHARSET') );/" \
      -e "s/define( 'DB_COLLATE',.*/define( 'DB_COLLATE', getenv('DB_COLLATE') );/" \
      -e "s/\$table_prefix =.*/\$table_prefix = getenv( 'TABLE_PREFIX' );/" \
        wp-config.php
    ;;
  help)
    echo "dockerpresso $VERSION"
    echo "Dockerpresso simplifies Wordpress theme and plugin development."
    echo ""
    echo "Usage:"
    echo "\thelp - this guide"
    echo "\tinit - initialize Wordpress installation by downloading core files and generating wp-config.php based on .env file"
    echo "\tup - (re)creates both http and mysql containers and runs Dockerpresso provisioning script"
    ;;
  *)
    assert_initialized
    docker-compose $ALL_DC_FILES run --rm web-cli
    ;;
esac

exit 0
